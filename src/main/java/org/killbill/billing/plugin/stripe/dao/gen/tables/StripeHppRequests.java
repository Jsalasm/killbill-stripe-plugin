/*
 * This file is generated by jOOQ.
 */
package org.killbill.billing.plugin.stripe.dao.gen.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.killbill.billing.plugin.stripe.dao.gen.Indexes;
import org.killbill.billing.plugin.stripe.dao.gen.Keys;
import org.killbill.billing.plugin.stripe.dao.gen.Killbill;
import org.killbill.billing.plugin.stripe.dao.gen.tables.records.StripeHppRequestsRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StripeHppRequests extends TableImpl<StripeHppRequestsRecord> {

    private static final long serialVersionUID = -111676860;

    /**
     * The reference instance of <code>killbill.stripe_hpp_requests</code>
     */
    public static final StripeHppRequests STRIPE_HPP_REQUESTS = new StripeHppRequests();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StripeHppRequestsRecord> getRecordType() {
        return StripeHppRequestsRecord.class;
    }

    /**
     * The column <code>killbill.stripe_hpp_requests.record_id</code>.
     */
    public final TableField<StripeHppRequestsRecord, ULong> RECORD_ID = createField(DSL.name("record_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.kb_account_id</code>.
     */
    public final TableField<StripeHppRequestsRecord, String> KB_ACCOUNT_ID = createField(DSL.name("kb_account_id"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.kb_payment_id</code>.
     */
    public final TableField<StripeHppRequestsRecord, String> KB_PAYMENT_ID = createField(DSL.name("kb_payment_id"), org.jooq.impl.SQLDataType.CHAR(36), this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.kb_payment_transaction_id</code>.
     */
    public final TableField<StripeHppRequestsRecord, String> KB_PAYMENT_TRANSACTION_ID = createField(DSL.name("kb_payment_transaction_id"), org.jooq.impl.SQLDataType.CHAR(36), this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.session_id</code>.
     */
    public final TableField<StripeHppRequestsRecord, String> SESSION_ID = createField(DSL.name("session_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.additional_data</code>.
     */
    public final TableField<StripeHppRequestsRecord, String> ADDITIONAL_DATA = createField(DSL.name("additional_data"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.created_date</code>.
     */
    public final TableField<StripeHppRequestsRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>killbill.stripe_hpp_requests.kb_tenant_id</code>.
     */
    public final TableField<StripeHppRequestsRecord, String> KB_TENANT_ID = createField(DSL.name("kb_tenant_id"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * Create a <code>killbill.stripe_hpp_requests</code> table reference
     */
    public StripeHppRequests() {
        this(DSL.name("stripe_hpp_requests"), null);
    }

    /**
     * Create an aliased <code>killbill.stripe_hpp_requests</code> table reference
     */
    public StripeHppRequests(String alias) {
        this(DSL.name(alias), STRIPE_HPP_REQUESTS);
    }

    /**
     * Create an aliased <code>killbill.stripe_hpp_requests</code> table reference
     */
    public StripeHppRequests(Name alias) {
        this(alias, STRIPE_HPP_REQUESTS);
    }

    private StripeHppRequests(Name alias, Table<StripeHppRequestsRecord> aliased) {
        this(alias, aliased, null);
    }

    private StripeHppRequests(Name alias, Table<StripeHppRequestsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> StripeHppRequests(Table<O> child, ForeignKey<O, StripeHppRequestsRecord> key) {
        super(child, key, STRIPE_HPP_REQUESTS);
    }

    @Override
    public Schema getSchema() {
        return Killbill.KILLBILL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.STRIPE_HPP_REQUESTS_STRIPE_HPP_REQUESTS_KB_ACCOUNT_ID, Indexes.STRIPE_HPP_REQUESTS_STRIPE_HPP_REQUESTS_KB_PAYMENT_TRANSACTION_ID);
    }

    @Override
    public Identity<StripeHppRequestsRecord, ULong> getIdentity() {
        return Keys.IDENTITY_STRIPE_HPP_REQUESTS;
    }

    @Override
    public UniqueKey<StripeHppRequestsRecord> getPrimaryKey() {
        return Keys.KEY_STRIPE_HPP_REQUESTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<StripeHppRequestsRecord>> getKeys() {
        return Arrays.<UniqueKey<StripeHppRequestsRecord>>asList(Keys.KEY_STRIPE_HPP_REQUESTS_PRIMARY, Keys.KEY_STRIPE_HPP_REQUESTS_RECORD_ID, Keys.KEY_STRIPE_HPP_REQUESTS_STRIPE_HPP_REQUESTS_KB_SESSION_ID);
    }

    @Override
    public StripeHppRequests as(String alias) {
        return new StripeHppRequests(DSL.name(alias), this);
    }

    @Override
    public StripeHppRequests as(Name alias) {
        return new StripeHppRequests(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StripeHppRequests rename(String name) {
        return new StripeHppRequests(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StripeHppRequests rename(Name name) {
        return new StripeHppRequests(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, String, String, String, String, String, LocalDateTime, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
